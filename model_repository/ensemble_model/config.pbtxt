name: 'ensemble_model'
platform: 'ensemble'
max_batch_size: 4

input: [
    {
        name: 'question',
        data_type: TYPE_STRING,
        dims: [1]
    }
]

output [
    {   
    name: "start_logits"
    data_type: TYPE_FP32
    dims: [-1]
  },
  {   
    name: "end_logits"
    data_type: TYPE_FP32
    dims: [-1]
  },
  {   
    name: "input_ids"
    data_type: TYPE_INT64
    dims: [-1]
  },
  {   
    name: "align_matrix"
    data_type: TYPE_FP32
    dims: [-1, -1]
  }
]

ensemble_scheduling{
    step [
        {
            model_name: 'bm25_retrieval',
            version: -1,
            input_map {
                key: 'question',
                value: 'question'
            },
            output_map {
                key: 'bm25_index_selection',
                value: 'bm25_index_selection'
            },
            output_map {
                key: 'sbert_input_ids',
                value: 'sbert_input_ids'
            },
            output_map {
                key: 'sbert_token_type_ids',
                value: 'sbert_token_type_ids'
            },
            output_map {
                key: 'top_k_sbert',
                value: 'top_k_sbert'
            }
        },
        {
            model_name: 'sbert_retrieval',
            version: -1,
            input_map {
                key: 'sbert_input_ids',
                value: 'sbert_input_ids'
            },
            input_map {
                key: 'sbert_attention_mask',
                value: 'sbert_attention_mask'
            },
            input_map {
                key: 'sbert_token_type_ids',
                value: 'sbert_token_type_ids'
            },
            input_map {
                key: 'bm25_index_selection',
                value: 'bm25_index_selection'
            },
            input_map {
                key: 'top_k_sbert',
                value: 'top_k_sbert'
            },
            output_map {
                key: 'sbert_index_selection',
                value: 'sbert_index_selection'
            },
            output_map {
                key: 'sbert_input_ids',
                value: 'sbert_input_ids'
            }
        }, 
        {
            model_name: 'qa_input',
            version: -1,
            input_map {
                key: 'sbert_index_selection',
                value: 'sbert_index_selection'
            },
            input_map {
                key: 'sbert_input_ids',
                value: 'sbert_input_ids'
            },
            output_map {
                key: 'input_ids',
                value: 'input_ids'
            },
            output_map {
                key: 'attention_mask',
                value: 'attention_mask'
            },
            output_map {
                key: 'align_matrix',
                value: 'align_matrix'
            }
        },
        {
            model_name: 'qa_model',
            version: -1,
            input_map {
                key: 'input_ids',
                value: 'input_ids'
            },
            input_map {
                key: 'attention_mask',
                value: 'attention_mask'
            },
            input_map {
                key: 'align_matrix',
                value: 'align_matrix'
            },
            output_map {
                key: 'start_logits',
                value: 'start_logits'
            },
            output_map {
                key: 'end_logits',
                value: 'end_logits'
            },
            output_map {
                key: 'input_ids',
                value: 'input_ids'
            },
            output_map {
                key: 'align_matrix',
                value: 'align_matrix'
            }
        }
    ]
}